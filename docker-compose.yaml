version: '3.9'
services:
  user-service:
    image: 'user-service:dev'
    container_name: 'user-service'
    build:
      context: './microservices/user-service'
    networks:
      - 'frontend'
      - 'backend'
      - 'userdomain'
    expose:
      - '50051'
    depends_on:
      - 'user-db'
      - 'cache'
    environment:
      NODE_ENV: 'test'
      GRPC_HOST: '0.0.0.0'
      GRPC_PORT: '50051'
      DB_HOST: 'user-db'
      DB_PORT: '5432'
      DB_USERNAME: 'postgres'
      DB_PASSWORD: 'postgres'
      DB_DATABASE: 'postgres'
      DB_SCHEMA: 'public'
      DB_SYNC: 'true'
      REDIS_HOST: 'cache'
      REDIS_PORT: '6379'
    healthcheck:
      test: ['CMD', '/bin/grpc_health_probe', '-addr=:50051']
      interval: 30s
      timeout: 10s
      retries: 5
    restart: 'on-failure'
  savings-service:
    image: 'savings-service:dev'
    container_name: 'savings-service'
    build:
      context: './microservices/savings-service'
    networks:
      - 'frontend'
      - 'backend'
      - 'savingsdomain'
    expose:
      - '50051'
    depends_on:
      - 'savings-db'
      - 'cache'
    environment:
      NODE_ENV: 'test'
      GRPC_HOST: '0.0.0.0'
      GRPC_PORT: '50051'
      DB_HOST: 'savings-db'
      DB_PORT: '5432'
      DB_USERNAME: 'postgres'
      DB_PASSWORD: 'postgres'
      DB_DATABASE: 'postgres'
      DB_SCHEMA: 'public'
      DB_SYNC: 'true'
      REDIS_HOST: 'cache'
      REDIS_PORT: '6379'
      SYSTEM_ACCOUNT_DEPOSIT_ID: '87c10eea-e9ac-4b67-90f0-60864f6b158b'
      SYSTEM_ACCOUNT_SAVING_ID: 'bcc34e6d-899c-4243-9ffa-05c78119ed51'
    healthcheck:
      test: ['CMD', '/bin/grpc_health_probe', '-addr=:50051']
      interval: 30s
      timeout: 10s
      retries: 5
    restart: 'on-failure'
  api-gateway:
    image: 'api-gateway:dev'
    container_name: 'api-gateway'
    build:
      context: './api-gateway'
    networks:
      - 'frontend'
    ports:
      - '3000:3000'
    depends_on:
      - 'cache'
      - 'user-service'
      - 'savings-service'
    environment:
      NODE_ENV: 'test'
      GRAPHQL_PORT: '3000'
      JWT_ACCESSTOKEN_SECRET: 'cdf26213a150dc3ecb610f18f6b38b46'
      JWT_REFRESHTOKEN_SECRET: '02ba4c4e5f8ecd1877fc52d64d30e37a2d9774fb1e5d026380ae0168e3c5522d'
      JWT_ISSUER: 'application'
      JWT_AUDIENCE: 'public'
      USER_SERVICE_URL: 'user-service:50051'
      SAVINGS_SERVICE_URL: 'savings-service:50051'
      REDIS_HOST: 'cache'
      REDIS_PORT: '6379'
    healthcheck:
      test: ['CMD', 'wget', 'localhost:3000/healthz -q -O - > /dev/null 2>&1']
      interval: 30s
      timeout: 10s
      retries: 5
    restart: 'on-failure'
  user-db:
    image: 'postgres:14-alpine'
    container_name: 'user-db'
    networks:
      - 'userdomain'
    expose:
      - '5432'
    volumes:
      - userdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
    healthcheck:
      test: ['CMD-SHELL', "sh -c 'pg_isready -U postgres'"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: 'on-failure'
  savings-db:
    image: 'postgres:14-alpine'
    container_name: 'savings-db'
    networks:
      - 'savingsdomain'
    expose:
      - '5432'
    volumes:
      - savingsdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
    healthcheck:
      test: ['CMD-SHELL', "sh -c 'pg_isready -U postgres'"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: 'on-failure'
  cache:
    image: 'redis:7-alpine'
    container_name: 'redis-cache'
    networks:
      - 'frontend'
      - 'backend'
    expose:
      - '6379'
    healthcheck:
      test: ['CMD-SHELL', "sh -c 'redis-cli PING'"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: 'on-failure'
networks:
  frontend:
  backend:
  userdomain:
  savingsdomain:

volumes:
  userdata:
  savingsdata:
